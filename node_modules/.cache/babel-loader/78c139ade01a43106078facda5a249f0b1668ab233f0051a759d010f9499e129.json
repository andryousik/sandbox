{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andryousik\\\\Desktop\\\\Programming\\\\react_projects\\\\projects\\\\sandbox-app\\\\src\\\\pages\\\\Dashboard\\\\components\\\\Stats\\\\Stats.jsx\";\nimport React from \"react\";\nimport Kpi from \"./Kpi/Kpi\";\nimport Graphic from \"./Graph/Graphic\";\nimport graphImage from \"../../../../images/graph.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst titles = [\"Money spent\", \"Revenue\", \"Working containers\", \"KWh for spent money\", \"System efficiency\", \"Today KWh\"];\n\n// Заглушка БД\nconst mockData = {\n  day: [{\n    text: \"€1 234,56\",\n    image: graphImage\n  }, {\n    text: \"€2 345,67\",\n    image: graphImage\n  }, {\n    text: \"12\",\n    image: graphImage\n  }, {\n    text: \"23 456\",\n    image: graphImage\n  }, {\n    text: \"60%\",\n    image: graphImage\n  }, {\n    text: \"789\",\n    image: graphImage\n  }],\n  week: [{\n    text: \"€8 765,43\",\n    image: graphImage\n  }, {\n    text: \"€12 345,67\",\n    image: graphImage\n  }, {\n    text: \"25\",\n    image: graphImage\n  }, {\n    text: \"150 000\",\n    image: graphImage\n  }, {\n    text: \"58%\",\n    image: graphImage\n  }, {\n    text: \"5 432\",\n    image: graphImage\n  }],\n  month: [{\n    text: \"€40 876,54\",\n    image: graphImage\n  }, {\n    text: \"€55 678,90\",\n    image: graphImage\n  }, {\n    text: \"30\",\n    image: graphImage\n  }, {\n    text: \"500 000\",\n    image: graphImage\n  }, {\n    text: \"57%\",\n    image: graphImage\n  }, {\n    text: \"20 000\",\n    image: graphImage\n  }],\n  year: [{\n    text: \"€500 000\",\n    image: graphImage\n  }, {\n    text: \"€700 000\",\n    image: graphImage\n  }, {\n    text: \"40\",\n    image: graphImage\n  }, {\n    text: \"2 000 000\",\n    image: graphImage\n  }, {\n    text: \"55%\",\n    image: graphImage\n  }, {\n    text: \"300 000\",\n    image: graphImage\n  }],\n  \"All time\": [{\n    text: \"€5 000 000\",\n    image: graphImage\n  }, {\n    text: \"€7 500 000\",\n    image: graphImage\n  }, {\n    text: \"50\",\n    image: graphImage\n  }, {\n    text: \"10 000 000\",\n    image: graphImage\n  }, {\n    text: \"53%\",\n    image: graphImage\n  }, {\n    text: \"3 000 000\",\n    image: graphImage\n  }]\n};\nconst Stats = ({\n  selectedTimeframe\n}) => {\n  const filteredData = mockData[selectedTimeframe] || [];\n  const kpiData = titles.map((title, index) => {\n    var _filteredData$index, _filteredData$index2;\n    return {\n      title,\n      text: ((_filteredData$index = filteredData[index]) === null || _filteredData$index === void 0 ? void 0 : _filteredData$index.text) || \"N/A\",\n      image: ((_filteredData$index2 = filteredData[index]) === null || _filteredData$index2 === void 0 ? void 0 : _filteredData$index2.image) || graphImage\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stats-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-left\",\n      children: /*#__PURE__*/_jsxDEV(Kpi, {\n        data: kpiData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-right\",\n      children: /*#__PURE__*/_jsxDEV(Graphic, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_c = Stats;\nexport default Stats;\nvar _c;\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"names":["React","Kpi","Graphic","graphImage","jsxDEV","_jsxDEV","titles","mockData","day","text","image","week","month","year","Stats","selectedTimeframe","filteredData","kpiData","map","title","index","_filteredData$index","_filteredData$index2","className","children","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/andryousik/Desktop/Programming/react_projects/projects/sandbox-app/src/pages/Dashboard/components/Stats/Stats.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Kpi from \"./Kpi/Kpi\";\r\nimport Graphic from \"./Graph/Graphic\";\r\nimport graphImage from \"../../../../images/graph.png\";\r\n\r\nconst titles = [\r\n  \"Money spent\",\r\n  \"Revenue\",\r\n  \"Working containers\",\r\n  \"KWh for spent money\",\r\n  \"System efficiency\",\r\n  \"Today KWh\"\r\n];\r\n\r\n// Заглушка БД\r\nconst mockData = {\r\n  day: [\r\n    { text: \"€1 234,56\", image: graphImage },\r\n    { text: \"€2 345,67\", image: graphImage },\r\n    { text: \"12\", image: graphImage },\r\n    { text: \"23 456\", image: graphImage },\r\n    { text: \"60%\", image: graphImage },\r\n    { text: \"789\", image: graphImage }\r\n  ],\r\n  week: [\r\n    { text: \"€8 765,43\", image: graphImage },\r\n    { text: \"€12 345,67\", image: graphImage },\r\n    { text: \"25\", image: graphImage },\r\n    { text: \"150 000\", image: graphImage },\r\n    { text: \"58%\", image: graphImage },\r\n    { text: \"5 432\", image: graphImage }\r\n  ],\r\n  month: [\r\n    { text: \"€40 876,54\", image: graphImage },\r\n    { text: \"€55 678,90\", image: graphImage },\r\n    { text: \"30\", image: graphImage },\r\n    { text: \"500 000\", image: graphImage },\r\n    { text: \"57%\", image: graphImage },\r\n    { text: \"20 000\", image: graphImage }\r\n  ],\r\n  year: [\r\n    { text: \"€500 000\", image: graphImage },\r\n    { text: \"€700 000\", image: graphImage },\r\n    { text: \"40\", image: graphImage },\r\n    { text: \"2 000 000\", image: graphImage },\r\n    { text: \"55%\", image: graphImage },\r\n    { text: \"300 000\", image: graphImage }\r\n  ],\r\n  \"All time\": [\r\n    { text: \"€5 000 000\", image: graphImage },\r\n    { text: \"€7 500 000\", image: graphImage },\r\n    { text: \"50\", image: graphImage },\r\n    { text: \"10 000 000\", image: graphImage },\r\n    { text: \"53%\", image: graphImage },\r\n    { text: \"3 000 000\", image: graphImage }\r\n  ]\r\n};\r\n\r\nconst Stats = ({ selectedTimeframe }) => {\r\n  const filteredData = mockData[selectedTimeframe] || [];\r\n\r\n  const kpiData = titles.map((title, index) => ({\r\n    title,\r\n    text: filteredData[index]?.text || \"N/A\",\r\n    image: filteredData[index]?.image || graphImage\r\n  }));\r\n\r\n  return (\r\n    <div className=\"stats-container\">\r\n      <div className=\"stats-left\">\r\n        <Kpi data={kpiData} />\r\n      </div>\r\n      <div className=\"stats-right\">\r\n        <Graphic />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}