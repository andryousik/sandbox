{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andryousik\\\\Desktop\\\\Programming\\\\react_projects\\\\projects\\\\sandbox-app\\\\src\\\\pages\\\\Security\\\\components\\\\AddNewElement\\\\AddNewElement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Component from \"../Component/Component\";\nimport \"./AddNewElement.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddNewElement = () => {\n  _s();\n  const [containers, setContainers] = useState([]);\n  const [nextId, setNextId] = useState(1);\n  const [selectedIds, setSelectedIds] = useState([]);\n  const [deleteMode, setDeleteMode] = useState(false);\n  const navigate = useNavigate();\n  const clickTimeout = useRef(null); // Храним таймер в useRef\n\n  useEffect(() => {\n    const savedContainers = JSON.parse(localStorage.getItem(\"containers\")) || [];\n    setContainers(savedContainers);\n    if (savedContainers.length > 0) {\n      setNextId(Math.max(...savedContainers.map(c => c.id)) + 1);\n    }\n  }, []);\n  useEffect(() => {\n    if (containers.length > 0) {\n      localStorage.setItem(\"containers\", JSON.stringify(containers));\n    }\n  }, [containers]);\n  useEffect(() => {\n    return () => {\n      // Очистка таймера при размонтировании компонента\n      if (clickTimeout.current) {\n        clearTimeout(clickTimeout.current);\n      }\n    };\n  }, []);\n  const handleAdd = () => {\n    const newContainer = {\n      id: nextId,\n      description: `Container ${nextId}`\n    };\n    const updatedContainers = [...containers, newContainer];\n    setContainers(updatedContainers);\n    localStorage.setItem(\"containers\", JSON.stringify(updatedContainers));\n    setNextId(nextId + 1);\n  };\n  const handleClick = id => {\n    if (deleteMode) {\n      // Если режим удаления включен, просто выбираем контейнер для удаления\n      setSelectedIds(prevSelectedIds => prevSelectedIds.includes(id) ? prevSelectedIds.filter(selectedId => selectedId !== id) : [...prevSelectedIds, id]);\n    } else {\n      // Устанавливаем таймер для определения одиночного клика\n      clickTimeout.current = setTimeout(() => {\n        console.log(\"Single click - no action (only select mode)\");\n      }, 300);\n    }\n  };\n  const handleDoubleClick = id => {\n    if (clickTimeout.current) {\n      clearTimeout(clickTimeout.current); // Отменяем одиночный клик\n    }\n    navigate(`/edit/${id}`);\n  };\n  const toggleDeleteMode = () => {\n    setDeleteMode(!deleteMode);\n    if (!deleteMode) {\n      setSelectedIds([]);\n    }\n  };\n  const handleDelete = () => {\n    const updatedContainers = containers.filter(container => !selectedIds.includes(container.id));\n    setContainers(updatedContainers);\n    localStorage.setItem(\"containers\", JSON.stringify(updatedContainers));\n    setSelectedIds([]);\n    setDeleteMode(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-button\",\n        onClick: toggleDeleteMode,\n        children: deleteMode ? \"Cancel\" : \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: handleAdd,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create a new component\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), deleteMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"confirm-delete-button\",\n        onClick: handleDelete,\n        disabled: selectedIds.length === 0,\n        children: \"Confirm Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-list\",\n      children: containers.map(container => /*#__PURE__*/_jsxDEV(Component, {\n        number: container.id,\n        description: container.description,\n        onClick: () => handleClick(container.id),\n        onDoubleClick: () => handleDoubleClick(container.id),\n        isSelected: selectedIds.includes(container.id)\n      }, container.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(AddNewElement, \"lT3NemcH1qBLYF8i6Of7KlSnvvY=\", false, function () {\n  return [useNavigate];\n});\n_c = AddNewElement;\nexport default AddNewElement;\nvar _c;\n$RefreshReg$(_c, \"AddNewElement\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","Component","jsxDEV","_jsxDEV","AddNewElement","_s","containers","setContainers","nextId","setNextId","selectedIds","setSelectedIds","deleteMode","setDeleteMode","navigate","clickTimeout","savedContainers","JSON","parse","localStorage","getItem","length","Math","max","map","c","id","setItem","stringify","current","clearTimeout","handleAdd","newContainer","description","updatedContainers","handleClick","prevSelectedIds","includes","filter","selectedId","setTimeout","console","log","handleDoubleClick","toggleDeleteMode","handleDelete","container","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","number","onDoubleClick","isSelected","_c","$RefreshReg$"],"sources":["C:/Users/andryousik/Desktop/Programming/react_projects/projects/sandbox-app/src/pages/Security/components/AddNewElement/AddNewElement.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Component from \"../Component/Component\";\r\nimport \"./AddNewElement.css\";\r\n\r\nconst AddNewElement = () => {\r\n  const [containers, setContainers] = useState([]);\r\n  const [nextId, setNextId] = useState(1);\r\n  const [selectedIds, setSelectedIds] = useState([]);\r\n  const [deleteMode, setDeleteMode] = useState(false);\r\n  const navigate = useNavigate();\r\n  const clickTimeout = useRef(null); // Храним таймер в useRef\r\n\r\n  useEffect(() => {\r\n    const savedContainers = JSON.parse(localStorage.getItem(\"containers\")) || [];\r\n    setContainers(savedContainers);\r\n    if (savedContainers.length > 0) {\r\n      setNextId(Math.max(...savedContainers.map((c) => c.id)) + 1);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (containers.length > 0) {\r\n      localStorage.setItem(\"containers\", JSON.stringify(containers));\r\n    }\r\n  }, [containers]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // Очистка таймера при размонтировании компонента\r\n      if (clickTimeout.current) {\r\n        clearTimeout(clickTimeout.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleAdd = () => {\r\n    const newContainer = {\r\n      id: nextId,\r\n      description: `Container ${nextId}`,\r\n    };\r\n    const updatedContainers = [...containers, newContainer];\r\n    setContainers(updatedContainers);\r\n    localStorage.setItem(\"containers\", JSON.stringify(updatedContainers));\r\n    setNextId(nextId + 1);\r\n  };\r\n\r\n  const handleClick = (id) => {\r\n    if (deleteMode) {\r\n      // Если режим удаления включен, просто выбираем контейнер для удаления\r\n      setSelectedIds((prevSelectedIds) =>\r\n        prevSelectedIds.includes(id)\r\n          ? prevSelectedIds.filter((selectedId) => selectedId !== id)\r\n          : [...prevSelectedIds, id]\r\n      );\r\n    } else {\r\n      // Устанавливаем таймер для определения одиночного клика\r\n      clickTimeout.current = setTimeout(() => {\r\n        console.log(\"Single click - no action (only select mode)\");\r\n      }, 300);\r\n    }\r\n  };\r\n\r\n  const handleDoubleClick = (id) => {\r\n    if (clickTimeout.current) {\r\n      clearTimeout(clickTimeout.current); // Отменяем одиночный клик\r\n    }\r\n    navigate(`/edit/${id}`);\r\n  };\r\n\r\n  const toggleDeleteMode = () => {\r\n    setDeleteMode(!deleteMode);\r\n    if (!deleteMode) {\r\n      setSelectedIds([]);\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    const updatedContainers = containers.filter((container) => !selectedIds.includes(container.id));\r\n    setContainers(updatedContainers);\r\n    localStorage.setItem(\"containers\", JSON.stringify(updatedContainers));\r\n    setSelectedIds([]);\r\n    setDeleteMode(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"button-row\">\r\n        <button className=\"delete-button\" onClick={toggleDeleteMode}>\r\n          {deleteMode ? \"Cancel\" : \"Delete\"}\r\n        </button>\r\n        <button className=\"add-button\" onClick={handleAdd}>+</button>\r\n        <h1>Create a new component</h1>\r\n        \r\n        {deleteMode && (\r\n          <button className=\"confirm-delete-button\" onClick={handleDelete} disabled={selectedIds.length === 0}>\r\n            Confirm Delete\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"container-list\">\r\n        {containers.map((container) => (\r\n          <Component\r\n            key={container.id}\r\n            number={container.id}\r\n            description={container.description}\r\n            onClick={() => handleClick(container.id)}\r\n            onDoubleClick={() => handleDoubleClick(container.id)}\r\n            isSelected={selectedIds.includes(container.id)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNewElement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}