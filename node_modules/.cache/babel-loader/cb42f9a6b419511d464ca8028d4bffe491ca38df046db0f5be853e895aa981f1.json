{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andryousik\\\\Desktop\\\\Programming\\\\react_projects\\\\projects\\\\sandbox-app\\\\src\\\\pages\\\\PNL\\\\components\\\\Revenue\\\\Revenue.jsx\";\nimport React from 'react';\nimport Card from './Card';\nimport \"./Revenue.css\";\nimport \"./Card.css\";\nimport TotalIcon from \"../../../../icons/total.png\";\nimport MonthIcon from \"../../../../icons/month.png\";\nimport DayIcon from \"../../../../icons/24_hour.png\";\nimport HourIcon from \"../../../../icons/1_hour.png\";\n\n// Временный массив с данными (потом заменишь на данные из БД)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  image: TotalIcon,\n  title: \"Total Revenue\",\n  description: \"€100,000\"\n}, {\n  image: MonthIcon,\n  title: \"Monthly Revenue\",\n  description: \"€10,000\"\n}, {\n  image: DayIcon,\n  title: \"Last 24h Revenue\",\n  description: \"€5,000\"\n}, {\n  image: HourIcon,\n  title: \"Last 1h Revenue\",\n  description: \"€500\"\n}];\nconst Revenue = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"revenue\",\n    children: data.map((item, index) => /*#__PURE__*/_jsxDEV(Card, {\n      image: item.image,\n      title: item.title,\n      discription: item.description\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = Revenue;\nexport default Revenue;\nvar _c;\n$RefreshReg$(_c, \"Revenue\");","map":{"version":3,"names":["React","Card","TotalIcon","MonthIcon","DayIcon","HourIcon","jsxDEV","_jsxDEV","data","image","title","description","Revenue","className","children","map","item","index","discription","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/andryousik/Desktop/Programming/react_projects/projects/sandbox-app/src/pages/PNL/components/Revenue/Revenue.jsx"],"sourcesContent":["import React from 'react';\r\nimport Card from './Card';\r\nimport \"./Revenue.css\"\r\nimport \"./Card.css\"\r\nimport TotalIcon from \"../../../../icons/total.png\";\r\nimport MonthIcon from \"../../../../icons/month.png\";\r\nimport DayIcon from \"../../../../icons/24_hour.png\";\r\nimport HourIcon from \"../../../../icons/1_hour.png\";\r\n\r\n\r\n\r\n// Временный массив с данными (потом заменишь на данные из БД)\r\nconst data = [\r\n  { image: TotalIcon, title: \"Total Revenue\", description: \"€100,000\" },\r\n  { image: MonthIcon, title: \"Monthly Revenue\", description: \"€10,000\" },\r\n  { image: DayIcon, title: \"Last 24h Revenue\", description: \"€5,000\" },\r\n  { image: HourIcon, title: \"Last 1h Revenue\", description: \"€500\" },\r\n];\r\n\r\nconst Revenue = () => {\r\n  return ( \r\n    <div className='revenue'>\r\n      {data.map((item, index) => (\r\n        <Card \r\n          key={index}\r\n          image={item.image} \r\n          title={item.title} \r\n          discription={item.description} \r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Revenue;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,eAAe;AACtB,OAAO,YAAY;AACnB,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,OAAO,MAAM,+BAA+B;AACnD,OAAOC,QAAQ,MAAM,8BAA8B;;AAInD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,IAAI,GAAG,CACX;EAAEC,KAAK,EAAEP,SAAS;EAAEQ,KAAK,EAAE,eAAe;EAAEC,WAAW,EAAE;AAAW,CAAC,EACrE;EAAEF,KAAK,EAAEN,SAAS;EAAEO,KAAK,EAAE,iBAAiB;EAAEC,WAAW,EAAE;AAAU,CAAC,EACtE;EAAEF,KAAK,EAAEL,OAAO;EAAEM,KAAK,EAAE,kBAAkB;EAAEC,WAAW,EAAE;AAAS,CAAC,EACpE;EAAEF,KAAK,EAAEJ,QAAQ;EAAEK,KAAK,EAAE,iBAAiB;EAAEC,WAAW,EAAE;AAAO,CAAC,CACnE;AAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB,oBACEL,OAAA;IAAKM,SAAS,EAAC,SAAS;IAAAC,QAAA,EACrBN,IAAI,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpBV,OAAA,CAACN,IAAI;MAEHQ,KAAK,EAAEO,IAAI,CAACP,KAAM;MAClBC,KAAK,EAAEM,IAAI,CAACN,KAAM;MAClBQ,WAAW,EAAEF,IAAI,CAACL;IAAY,GAHzBM,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIX,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAC,EAAA,GAbKX,OAAO;AAeb,eAAeA,OAAO;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}