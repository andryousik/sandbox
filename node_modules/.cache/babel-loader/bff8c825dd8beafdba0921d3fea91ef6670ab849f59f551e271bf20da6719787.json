{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andryousik\\\\Desktop\\\\Programming\\\\react_projects\\\\projects\\\\sandbox-app\\\\src\\\\pages\\\\Dashboard\\\\components\\\\Stats\\\\Graph\\\\Graphic.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Graphic.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst titles = [\"Money spent\", \"Revenue\", \"Working containers\", \"KWh for spent money\", \"System efficiency\", \"Today KWh\"];\nconst Graphic = ({\n  selectedTimeframe\n}) => {\n  _s();\n  const [selectedMetric, setSelectedMetric] = useState(titles[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graphic-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graphic-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [selectedTimeframe, \" Overview\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"metric-selector\",\n        value: selectedMetric,\n        onChange: e => setSelectedMetric(e.target.value),\n        children: titles.map((metric, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: metric,\n          children: metric\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graphic-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graphic-placeholder\",\n        children: [\"[GRAPH FOR \", selectedMetric, \"]\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Graphic, \"PQVK2LlzI2rt9Y1WAuJCzp5QJxQ=\");\n_c = Graphic;\nexport default Graphic;\nvar _c;\n$RefreshReg$(_c, \"Graphic\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","titles","Graphic","selectedTimeframe","_s","selectedMetric","setSelectedMetric","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","metric","index","_c","$RefreshReg$"],"sources":["C:/Users/andryousik/Desktop/Programming/react_projects/projects/sandbox-app/src/pages/Dashboard/components/Stats/Graph/Graphic.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Graphic.css\";\r\n\r\nconst titles = [\r\n  \"Money spent\",\r\n  \"Revenue\",\r\n  \"Working containers\",\r\n  \"KWh for spent money\",\r\n  \"System efficiency\",\r\n  \"Today KWh\"\r\n];\r\n\r\nconst Graphic = ({ selectedTimeframe }) => {\r\n  const [selectedMetric, setSelectedMetric] = useState(titles[0]);\r\n\r\n  return (\r\n    <div className=\"graphic-container\">\r\n      {/* Заголовок с выбором показателя */}\r\n      <div className=\"graphic-header\">\r\n        <h2>{selectedTimeframe} Overview</h2>\r\n        <select\r\n          className=\"metric-selector\"\r\n          value={selectedMetric}\r\n          onChange={(e) => setSelectedMetric(e.target.value)}\r\n        >\r\n          {titles.map((metric, index) => (\r\n            <option key={index} value={metric}>\r\n              {metric}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {/* Место для графика */}\r\n      <div className=\"graphic-content\">\r\n        <div className=\"graphic-placeholder\">\r\n          [GRAPH FOR {selectedMetric}]\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graphic;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,MAAM,GAAG,CACb,aAAa,EACb,SAAS,EACT,oBAAoB,EACpB,qBAAqB,EACrB,mBAAmB,EACnB,WAAW,CACZ;AAED,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAACG,MAAM,CAAC,CAAC,CAAC,CAAC;EAE/D,oBACED,OAAA;IAAKO,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAEhCR,OAAA;MAAKO,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BR,OAAA;QAAAQ,QAAA,GAAKL,iBAAiB,EAAC,WAAS;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCZ,OAAA;QACEO,SAAS,EAAC,iBAAiB;QAC3BM,KAAK,EAAER,cAAe;QACtBS,QAAQ,EAAGC,CAAC,IAAKT,iBAAiB,CAACS,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAL,QAAA,EAElDP,MAAM,CAACgB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACxBnB,OAAA;UAAoBa,KAAK,EAAEK,MAAO;UAAAV,QAAA,EAC/BU;QAAM,GADIC,KAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNZ,OAAA;MAAKO,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BR,OAAA;QAAKO,SAAS,EAAC,qBAAqB;QAAAC,QAAA,GAAC,aACxB,EAACH,cAAc,EAAC,GAC7B;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACR,EAAA,CA7BIF,OAAO;AAAAkB,EAAA,GAAPlB,OAAO;AA+Bb,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}